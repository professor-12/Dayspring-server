// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}


datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @map("_id") @default(uuid())
  username      String
  email     String  @unique
  password  String?
  role     Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Cart Cart?
}


model Product {
  id   String   @id @map("_id") @default(uuid())
  name String
  description String?
  price Float
  image String
  course_outline String
  categories ProductCategory[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cartItems CartItem[]
  cartId String?
  
}

model Category {
  id   String   @id @map("_id") @default(uuid())
  name String
  image String
  products ProductCategory[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
  GUEST
}

model ProductCategory {
  id         String   @id @map("_id") @default(uuid())
  productId  String
  categoryId String
  product    Product  @relation(fields: [productId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])
}

model CartItem {
  id     String   @id @map("_id") @default(uuid())
  productId String
  cartId String
  quantity Int
  product Product @relation(fields: [productId], references: [id])
  cart    Cart    @relation(fields: [cartId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id     String   @id @map("_id") @default(uuid())
  userId String @unique
  items CartItem[]
  user  User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


